Loading required package: docopt
Loading required package: methods
Loading required package: plyr
Loading required package: dplyr

Attaching package: ‘dplyr’

The following objects are masked from ‘package:plyr’:

    arrange, count, desc, failwith, id, mutate, rename, summarise,
    summarize

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: tidyr
Loading required package: lme4
Loading required package: Matrix

Attaching package: ‘Matrix’

The following object is masked from ‘package:tidyr’:

    expand

Loading required package: rstan
Loading required package: ggplot2
rstan (Version 2.9.0-3, packaged: 2016-02-11 15:54:41 UTC, GitRev: 05c3d0058b6a)
For execution on a local, multicore CPU with excess RAM we recommend calling
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())

Attaching package: ‘rstan’

The following object is masked from ‘package:tidyr’:

    extract

Loading required package: survey
Loading required package: grid

Attaching package: ‘survey’

The following object is masked from ‘package:graphics’:

    dotchart

List of 3
 $ use_sizes   : chr "0"
 $ outcome_type: chr "continuous"
 $ mod_name    : chr "knowsizes_ccc"
NULL
[1] "use.sizes"    "outcome.type" "mod.name"    
[1] "Assigning 0 to use.sizes"
[1] "Assigning continuous to outcome.type"
[1] "Assigning knowsizes_ccc to mod.name"
##################################################################################
##################################################################################
Starting to run use.sizes = 0 , stanmod =  knowsizes_ccc for 1000 iterations and 4 chains.
[1] "2016-11-29 14:27:56 EST"
[1] "making stan data"
[1] "2016-11-29 14:27:56 EST"
[1] "***********************************************************************"
[1] "********** about to run stan for num.clusters = 999, num.units = 999, model knowsizes_ccc"
[1] "2016-11-29 14:27:57 EST"

SAMPLING FOR MODEL 'knowsizes_ccc' NOW (CHAIN 1).

Chain 1, Iteration:   1 / 1000 [  0%]  (Warmup)
Chain 1, Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 1, Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 1, Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 1, Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 1, Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 1, Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 1, Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 1, Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 1, Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 1, Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 1, Iteration: 1000 / 1000 [100%]  (Sampling)# 
#  Elapsed Time: 1035.71 seconds (Warm-up)
#                891.34 seconds (Sampling)
#                1927.05 seconds (Total)
# 

SAMPLING FOR MODEL 'knowsizes_ccc' NOW (CHAIN 2).

Chain 2, Iteration:   1 / 1000 [  0%]  (Warmup)
Chain 2, Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 2, Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 2, Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 2, Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 2, Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 2, Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 2, Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 2, Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 2, Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 2, Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 2, Iteration: 1000 / 1000 [100%]  (Sampling)# 
#  Elapsed Time: 1759.5 seconds (Warm-up)
#                617.57 seconds (Sampling)
#                2377.07 seconds (Total)
# 
The following numerical problems occured the indicated number of times after warmup on chain 2
                                                                                count
Exception thrown at line 50: normal_log: Scale parameter is 0, but must be > 0!     3
When a numerical problem occurs, the Metropolis proposal gets rejected.
However, by design Metropolis proposals sometimes get rejected even when there are no numerical problems.
Thus, if the number in the 'count' column is small, do not ask about this message on stan-users.

SAMPLING FOR MODEL 'knowsizes_ccc' NOW (CHAIN 3).

Chain 3, Iteration:   1 / 1000 [  0%]  (Warmup)
Chain 3, Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 3, Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 3, Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 3, Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 3, Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 3, Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 3, Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 3, Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 3, Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 3, Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 3, Iteration: 1000 / 1000 [100%]  (Sampling)# 
#  Elapsed Time: 613.8 seconds (Warm-up)
#                455.9 seconds (Sampling)
#                1069.7 seconds (Total)
# 

SAMPLING FOR MODEL 'knowsizes_ccc' NOW (CHAIN 4).

Chain 4, Iteration:   1 / 1000 [  0%]  (Warmup)
Chain 4, Iteration: 100 / 1000 [ 10%]  (Warmup)
Chain 4, Iteration: 200 / 1000 [ 20%]  (Warmup)
Chain 4, Iteration: 300 / 1000 [ 30%]  (Warmup)
Chain 4, Iteration: 400 / 1000 [ 40%]  (Warmup)
Chain 4, Iteration: 500 / 1000 [ 50%]  (Warmup)
Chain 4, Iteration: 501 / 1000 [ 50%]  (Sampling)
Chain 4, Iteration: 600 / 1000 [ 60%]  (Sampling)
Chain 4, Iteration: 700 / 1000 [ 70%]  (Sampling)
Chain 4, Iteration: 800 / 1000 [ 80%]  (Sampling)
Chain 4, Iteration: 900 / 1000 [ 90%]  (Sampling)
Chain 4, Iteration: 1000 / 1000 [100%]  (Sampling)# 
#  Elapsed Time: 1560.33 seconds (Warm-up)
#                1073.83 seconds (Sampling)
#                2634.16 seconds (Total)
# 
[1] "done fitting stan model"
[1] "2016-11-29 17:25:39 EST"
[1] "done making samps"
[1] "2016-11-29 17:25:39 EST"
[1] "done making par.ests"
[1] "2016-11-29 17:31:07 EST"
[1] "making par.ests"
[1] "2016-11-29 17:31:07 EST"
[1] "printing results"
[1] "2016-11-29 17:31:07 EST"
'data.frame':	8 obs. of  11 variables:
 $ param.name: Factor w/ 8 levels "alpha0","alpha1",..: 3 4 1 2 5 6 7 8
 $ mean      : num  -0.8498 0.0151 1.6342 0.0774 0.2969 ...
 $ se_mean   : num  0.00634 0.01449 0.00691 0.02392 0.00262 ...
 $ sd        : num  0.0304 0.0598 0.032 0.0636 0.0214 ...
 $ 2.5%      : num  -0.9005 -0.1018 1.537 -0.0489 0.2562 ...
 $ 25%       : num  -0.8722 -0.0244 1.621 0.0373 0.2821 ...
 $ 50%       : num  -0.8524 0.0127 1.6402 0.0715 0.2973 ...
 $ 75%       : num  -0.831 0.057 1.653 0.116 0.31 ...
 $ 97.5%     : num  -0.771 0.132 1.687 0.204 0.34 ...
 $ n_eff     : num  23.01 17.01 21.47 7.07 66.87 ...
 $ Rhat      : num  1.19 1.29 1.22 1.3 1.07 ...
NULL
########################################################
-----------------  use.sizes =  0 , stanmod =  knowsizes_ccc , num.clusters =  999 , num.units =  999 ---------------------
true:  -0.8376784 
est:  -0.837696 
est 95% CI:  -0.8421316 ,  -0.8334629 
param posterior means: 
                   mean        2.5%      97.5%      Rhat       n_eff
gamma0      -0.84983761 -0.90052868 -0.7713744 1.1867253   23.014707
gamma1       0.01506566 -0.10176596  0.1323598 1.2882089   17.006682
alpha0       1.63417474  1.53702864  1.6867174 1.2199717   21.466032
alpha1       0.07736827 -0.04891427  0.2044605 1.2994111    7.069578
sigma_beta0  0.29692742  0.25621872  0.3397363 1.0705355   66.871863
sigma_beta1  0.33093839  0.29537179  0.3816512 1.3937032    5.376708
sigma_y      0.50705588  0.50415077  0.5100232 0.9987837 2000.000000
summary of Mj_sam: 
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  103.0   351.0   556.5   569.6   780.5   986.0 
summary of Mj_unsamp posterior means:
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
                                                
########################################################
[1] "saving results"
[1] "2016-11-29 17:31:07 EST"
##################################################################################
##################################################################################
